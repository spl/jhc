
internal naming:

for a variety of reasons, the compiler needs to generate haskell names
internally, the convention is that internally generated names are in a
psuedomodule that ends in '@' so it cannot conflict with any real module.

Instance@ - contains the implementation of all instance methods and the
   defaults for a class

LL@ - these are generated by lambda lifting functions to the top level

W@ - this is the worker of a worker/wrapper split


when a name is generated from an existing one, the convention is to append
'$n' for some number that makes the name unique.



code style:

lines should have no trailing whitespace to avoid spurious diffs in darcs

the tab character should not appear in any source file except the Makefile
and the otl files.

4 space indents should be used.

unless it can fit all on one line, a newline
should come after let, do or where so that the code is always indented in
units of 4 spaces

in general, I use under_scores for CAFs, global names or tables and camelCaps
for functions and CapCaps for data and type constructors.

