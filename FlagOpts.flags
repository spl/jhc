{-@Options

# Code Options

Various options affecting how jhc interprets and compiles code can be
controlled with the '-f' flag, the following options are availible, you can
negate any particular one by prepending 'no-' to it.


!Code options
unboxed-tuples allow unboxed tuple syntax to be recognized
unboxed-values allow unboxed value syntax
ffi support foreign function declarations
cpp pass haskell source through c preprocessor
m4 pass haskell source through m4 preprocessor

!Typechecking
monomorphism-restriction enforce monomorphism restriction
defaulting perform defaulting of ambiguous types

!Debugging
lint perform lots of extra type checks

!Optimization Options
inline-pragmas use inline pragmas
rules use rules
float-in perform float inward transform
strictness perform strictness analysis
cpr do CPR analysis
type-analysis perhaps a basic points-to analysis on types right after method generation
global-optimize perform whole program E optimization

!Code Generation
via-ghc compile via ghc
wrapper wrap main in exception handler
boehm use Boehm garbage collector
profile enable profiling code in generated executable
debug enable debugging code in generated executable
raw just evaluate main to WHNF and nothing else.

!Default settings
@default inline-pragmas rules wrapper float-in strictness defaulting type-analysis monomorphism-restriction boxy eval-optimize global-optimize
