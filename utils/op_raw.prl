#!/usr/bin/perl -w

use strict;


my $mod = shift @ARGV;
$mod =~ s/^.*\///;

print "module $mod where\n\n";
print "import Data.ByteString.Unsafe\n";
print "import Data.ByteString\n";
print "import System.IO.Unsafe\n\n";

while (@ARGV) {
    my $fn = shift @ARGV;
    my $nn = lc $fn;
    $nn =~ s/^.*\///;
    $nn =~ s/\W/_/g;

    open F, "<:utf8", $fn;

    $fn =~ s{/}{\\/}g;
    print "-- | Generated from $fn on " . `date`;
    print "{-# NOINLINE $nn #-}\n";
    print "$nn :: ByteString\n";
    print "$nn = unsafePerformIO \$ unsafePackAddress \"\\\n \\";
    #print "$nn = \"";
    while (<F>) {
        s/\\/\\\\/g;
        s/\n/\\n/g;
        s/[^\x20-\x7e]/sprintf("\\x%04x\\&", ord($&))/eg;

        s/\"/\\"/g;
        print "$_\\\n \\";
    }

    print "\"#\n\n";
}


print "\n\n";
